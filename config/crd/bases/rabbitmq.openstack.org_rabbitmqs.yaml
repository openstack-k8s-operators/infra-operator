---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: rabbitmqs.rabbitmq.openstack.org
spec:
  group: rabbitmq.openstack.org
  names:
    categories:
    - all
    - rabbitmq
    kind: RabbitMq
    listKind: RabbitMqList
    plural: rabbitmqs
    singular: rabbitmq
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Status
      jsonPath: .status.conditions[0].status
      name: Status
      type: string
    - description: Message
      jsonPath: .status.conditions[0].message
      name: Message
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: RabbitMq is the Schema for the rabbitmqs API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RabbitMqSpec defines the desired state of RabbitMq
            properties:
              affinity:
                $ref: '#/definitions/k8s.io~1api~1core~1v1~0Affinity'
                description: Affinity scheduling rules to be applied on created Pods.
              containerImage:
                description: Name of the rabbitmq container image to run (will be
                  set to environmental default if empty)
                type: string
              delayStartSeconds:
                default: 30
                description: |-
                  DelayStartSeconds is the time the init container (`setup-container`) will sleep before terminating.
                  This effectively delays the time between starting the Pod and starting the `rabbitmq` container.
                  RabbitMQ relies on up-to-date DNS entries early during peer discovery.
                  The purpose of this artificial delay is to ensure that DNS entries are up-to-date when booting RabbitMQ.
                  For more information, see https://github.com/kubernetes/kubernetes/issues/92559
                  If your Kubernetes DNS backend is configured with a low DNS cache value or publishes not ready addresses
                  promptly, you can decrase this value or set it to 0.
                format: int32
                minimum: 0
                type: integer
              nodeSelector:
                additionalProperties:
                  type: string
                description: NodeSelector to target subset of worker nodes running
                  this service
                type: object
              override:
                description: Provides the ability to override the generated manifest
                  of several child resources.
                properties:
                  service:
                    description: Override configuration for the Service created to
                      serve traffic to the cluster.
                    properties:
                      metadata:
                        description: |-
                          EmbeddedLabelsAnnotations is an embedded subset of the fields included in k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta.
                          Only labels and annotations are included.
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: |-
                              Annotations is an unstructured key value map stored with a resource that may be
                              set by external tools to store and retrieve arbitrary metadata. They are not
                              queryable and should be preserved when modifying objects.
                              More info: http://kubernetes.io/docs/user-guide/annotations
                            type: object
                          labels:
                            additionalProperties:
                              type: string
                            description: |-
                              Map of string keys and values that can be used to organize and categorize
                              (scope and select) objects. May match selectors of replication controllers
                              and services.
                              More info: http://kubernetes.io/docs/user-guide/labels
                            type: object
                        type: object
                      spec:
                        $ref: '#/definitions/k8s.io~1api~1core~1v1~0ServiceSpec'
                        description: |-
                          Spec defines the behavior of a Service.
                          https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
                    type: object
                  statefulSet:
                    description: Override configuration for the RabbitMQ StatefulSet.
                    properties:
                      metadata:
                        description: |-
                          EmbeddedLabelsAnnotations is an embedded subset of the fields included in k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta.
                          Only labels and annotations are included.
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: |-
                              Annotations is an unstructured key value map stored with a resource that may be
                              set by external tools to store and retrieve arbitrary metadata. They are not
                              queryable and should be preserved when modifying objects.
                              More info: http://kubernetes.io/docs/user-guide/annotations
                            type: object
                          labels:
                            additionalProperties:
                              type: string
                            description: |-
                              Map of string keys and values that can be used to organize and categorize
                              (scope and select) objects. May match selectors of replication controllers
                              and services.
                              More info: http://kubernetes.io/docs/user-guide/labels
                            type: object
                        type: object
                      spec:
                        description: Spec defines the desired identities of pods in
                          this set.
                        properties:
                          minReadySeconds:
                            description: |-
                              The minimum number of seconds for which a newly created StatefulSet pod should
                              be ready without any of its container crashing, for it to be considered
                              available. Defaults to 0 (pod will be considered available as soon as it
                              is ready).
                            format: int32
                            type: integer
                          persistentVolumeClaimRetentionPolicy:
                            description: |-
                              StatefulSetPersistentVolumeClaimRetentionPolicy describes the policy used for PVCs
                              created from the StatefulSet VolumeClaimTemplates.
                            properties:
                              whenDeleted:
                                description: |-
                                  WhenDeleted specifies what happens to PVCs created from StatefulSet
                                  VolumeClaimTemplates when the StatefulSet is deleted. The default policy
                                  of `Retain` causes PVCs to not be affected by StatefulSet deletion. The
                                  `Delete` policy causes those PVCs to be deleted.
                                type: string
                              whenScaled:
                                description: |-
                                  WhenScaled specifies what happens to PVCs created from StatefulSet
                                  VolumeClaimTemplates when the StatefulSet is scaled down. The default
                                  policy of `Retain` causes PVCs to not be affected by a scaledown. The
                                  `Delete` policy causes the associated PVCs for any excess pods above
                                  the replica count to be deleted.
                                type: string
                            type: object
                          podManagementPolicy:
                            description: |-
                              podManagementPolicy controls how pods are created during initial scale up,
                              when replacing pods on nodes, or when scaling down. The default policy is
                              `OrderedReady`, where pods are created in increasing order (pod-0, then
                              pod-1, etc) and the controller will wait until each pod is ready before
                              continuing. When scaling down, the pods are removed in the opposite order.
                              The alternative policy is `Parallel` which will create pods in parallel
                              to match the desired scale without waiting, and on scale down will delete
                              all pods at once.
                            type: string
                          replicas:
                            description: |-
                              replicas corresponds to the desired number of Pods in the StatefulSet.
                              For more info, see https://pkg.go.dev/k8s.io/api/apps/v1#StatefulSetSpec
                            format: int32
                            type: integer
                          selector:
                            description: |-
                              selector is a label query over pods that should match the replica count.
                              It must match the pod template's labels.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: |-
                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: |-
                                        operator represents a key's relationship to a set of values.
                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: |-
                                        values is an array of string values. If the operator is In or NotIn,
                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                        the values array must be empty. This array is replaced during a strategic
                                        merge patch.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: |-
                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                            x-kubernetes-map-type: atomic
                          serviceName:
                            description: |-
                              serviceName is the name of the service that governs this StatefulSet.
                              This service must exist before the StatefulSet, and is responsible for
                              the network identity of the set. Pods get DNS/hostnames that follow the
                              pattern: pod-specific-string.serviceName.default.svc.cluster.local
                              where "pod-specific-string" is managed by the StatefulSet controller.
                            type: string
                          template:
                            description: |-
                              template is the object that describes the pod that will be created if
                              insufficient replicas are detected. Each pod stamped out by the StatefulSet
                              will fulfill this Template, but have a unique identity from the rest
                              of the StatefulSet.
                            properties:
                              metadata:
                                description: |-
                                  EmbeddedObjectMeta is an embedded subset of the fields included in k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta.
                                  Only fields which are relevant to embedded resources are included.
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      Annotations is an unstructured key value map stored with a resource that may be
                                      set by external tools to store and retrieve arbitrary metadata. They are not
                                      queryable and should be preserved when modifying objects.
                                      More info: http://kubernetes.io/docs/user-guide/annotations
                                    type: object
                                  labels:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      Map of string keys and values that can be used to organize and categorize
                                      (scope and select) objects. May match selectors of replication controllers
                                      and services.
                                      More info: http://kubernetes.io/docs/user-guide/labels
                                    type: object
                                  name:
                                    description: |-
                                      Name must be unique within a namespace. Is required when creating resources, although
                                      some resources may allow a client to request the generation of an appropriate name
                                      automatically. Name is primarily intended for creation idempotence and configuration
                                      definition.
                                      Cannot be updated.
                                      More info: http://kubernetes.io/docs/user-guide/identifiers#names
                                    type: string
                                  namespace:
                                    description: |-
                                      Namespace defines the space within each name must be unique. An empty namespace is
                                      equivalent to the "default" namespace, but "default" is the canonical representation.
                                      Not all objects are required to be scoped to a namespace - the value of this field for
                                      those objects will be empty.


                                      Must be a DNS_LABEL.
                                      Cannot be updated.
                                      More info: http://kubernetes.io/docs/user-guide/namespaces
                                    type: string
                                type: object
                              spec:
                                $ref: '#/definitions/k8s.io~1api~1core~1v1~0PodSpec'
                                description: |-
                                  Specification of the desired behavior of the pod.
                                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
                            type: object
                          updateStrategy:
                            description: |-
                              updateStrategy indicates the StatefulSetUpdateStrategy that will be
                              employed to update Pods in the StatefulSet when a revision is made to
                              Template.
                            properties:
                              rollingUpdate:
                                description: RollingUpdate is used to communicate
                                  parameters when Type is RollingUpdateStatefulSetStrategyType.
                                properties:
                                  maxUnavailable:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: |-
                                      The maximum number of pods that can be unavailable during the update.
                                      Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
                                      Absolute number is calculated from percentage by rounding up. This can not be 0.
                                      Defaults to 1. This field is alpha-level and is only honored by servers that enable the
                                      MaxUnavailableStatefulSet feature. The field applies to all pods in the range 0 to
                                      Replicas-1. That means if there is any unavailable pod in the range 0 to Replicas-1, it
                                      will be counted towards MaxUnavailable.
                                    x-kubernetes-int-or-string: true
                                  partition:
                                    description: |-
                                      Partition indicates the ordinal at which the StatefulSet should be partitioned
                                      for updates. During a rolling update, all pods from ordinal Replicas-1 to
                                      Partition are updated. All pods from ordinal Partition-1 to 0 remain untouched.
                                      This is helpful in being able to do a canary based deployment. The default value is 0.
                                    format: int32
                                    type: integer
                                type: object
                              type:
                                description: |-
                                  Type indicates the type of the StatefulSetUpdateStrategy.
                                  Default is RollingUpdate.
                                type: string
                            type: object
                          volumeClaimTemplates:
                            description: |-
                              volumeClaimTemplates is a list of claims that pods are allowed to reference.
                              The StatefulSet controller is responsible for mapping network identities to
                              claims in a way that maintains the identity of a pod. Every claim in
                              this list must have at least one matching (by name) volumeMount in one
                              container in the template. A claim in this list takes precedence over
                              any volumes in the template, with the same name.
                            items:
                              description: |-
                                PersistentVolumeClaim is an embedded version of k8s.io/api/core/v1.PersistentVolumeClaim.
                                It contains TypeMeta and a reduced ObjectMeta.
                                Field status is omitted.
                              properties:
                                apiVersion:
                                  description: |-
                                    APIVersion defines the versioned schema of this representation of an object.
                                    Servers should convert recognized schemas to the latest internal value, and
                                    may reject unrecognized values.
                                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                                  type: string
                                kind:
                                  description: |-
                                    Kind is a string value representing the REST resource this object represents.
                                    Servers may infer this from the endpoint the client submits requests to.
                                    Cannot be updated.
                                    In CamelCase.
                                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                                  type: string
                                metadata:
                                  description: |-
                                    EmbeddedObjectMeta is an embedded subset of the fields included in k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta.
                                    Only fields which are relevant to embedded resources are included.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        Annotations is an unstructured key value map stored with a resource that may be
                                        set by external tools to store and retrieve arbitrary metadata. They are not
                                        queryable and should be preserved when modifying objects.
                                        More info: http://kubernetes.io/docs/user-guide/annotations
                                      type: object
                                    labels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        Map of string keys and values that can be used to organize and categorize
                                        (scope and select) objects. May match selectors of replication controllers
                                        and services.
                                        More info: http://kubernetes.io/docs/user-guide/labels
                                      type: object
                                    name:
                                      description: |-
                                        Name must be unique within a namespace. Is required when creating resources, although
                                        some resources may allow a client to request the generation of an appropriate name
                                        automatically. Name is primarily intended for creation idempotence and configuration
                                        definition.
                                        Cannot be updated.
                                        More info: http://kubernetes.io/docs/user-guide/identifiers#names
                                      type: string
                                    namespace:
                                      description: |-
                                        Namespace defines the space within each name must be unique. An empty namespace is
                                        equivalent to the "default" namespace, but "default" is the canonical representation.
                                        Not all objects are required to be scoped to a namespace - the value of this field for
                                        those objects will be empty.


                                        Must be a DNS_LABEL.
                                        Cannot be updated.
                                        More info: http://kubernetes.io/docs/user-guide/namespaces
                                      type: string
                                  type: object
                                spec:
                                  $ref: '#/definitions/k8s.io~1api~1core~1v1~0PersistentVolumeClaimSpec'
                                  description: |-
                                    Spec defines the desired characteristics of a volume requested by a pod author.
                                    More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                              type: object
                            type: array
                        type: object
                    type: object
                type: object
              persistence:
                default:
                  storage: 10Gi
                description: The desired persistent storage configuration for each
                  Pod in the cluster.
                properties:
                  storage:
                    anyOf:
                    - type: integer
                    - type: string
                    default: 10Gi
                    description: |-
                      The requested size of the persistent volume attached to each Pod in the RabbitmqCluster.
                      The format of this field matches that defined by kubernetes/apimachinery.
                      See https://pkg.go.dev/k8s.io/apimachinery/pkg/api/resource#Quantity for more info on the format of this field.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  storageClassName:
                    description: The name of the StorageClass to claim a PersistentVolume
                      from.
                    type: string
                type: object
              rabbitmq:
                description: Configuration options for RabbitMQ Pods created in the
                  cluster.
                properties:
                  additionalConfig:
                    description: |-
                      Modify to add to the rabbitmq.conf file in addition to default configurations set by the operator.
                      Modifying this property on an existing RabbitmqCluster will trigger a StatefulSet rolling restart and will cause rabbitmq downtime.
                      For more information on this config, see https://www.rabbitmq.com/configure.html#config-file
                    maxLength: 2000
                    type: string
                  additionalPlugins:
                    description: 'List of plugins to enable in addition to essential
                      plugins: rabbitmq_management, rabbitmq_prometheus, and rabbitmq_peer_discovery_k8s.'
                    items:
                      description: A Plugin to enable on the RabbitmqCluster.
                      maxLength: 100
                      pattern: ^\w+$
                      type: string
                    maxItems: 100
                    type: array
                  advancedConfig:
                    description: |-
                      Specify any rabbitmq advanced.config configurations to apply to the cluster.
                      For more information on advanced config, see https://www.rabbitmq.com/configure.html#advanced-config-file
                    maxLength: 100000
                    type: string
                  envConfig:
                    description: |-
                      Modify to add to the rabbitmq-env.conf file. Modifying this property on an existing RabbitmqCluster will trigger a StatefulSet rolling restart and will cause rabbitmq downtime.
                      For more information on env config, see https://www.rabbitmq.com/man/rabbitmq-env.conf.5.html
                    maxLength: 100000
                    type: string
                  erlangInetConfig:
                    description: |-
                      Erlang Inet configuration to apply to the Erlang VM running rabbit.
                      See also: https://www.erlang.org/doc/apps/erts/inet_cfg.html
                    maxLength: 2000
                    type: string
                type: object
              replicas:
                default: 1
                description: |-
                  Replicas is the number of nodes in the RabbitMQ cluster. Each node is deployed as a Replica in a StatefulSet. Only 1, 3, 5 replicas clusters are tested.
                  This value should be an odd number to ensure the resultant cluster can establish exactly one quorum of nodes
                  in the event of a fragmenting network partition.
                format: int32
                minimum: 0
                type: integer
              resources:
                $ref: '#/definitions/k8s.io~1api~1core~1v1~0ResourceRequirements'
                default:
                  limits:
                    cpu: 2000m
                    memory: 2Gi
                  requests:
                    cpu: 1000m
                    memory: 2Gi
                description: The desired compute resource requirements of Pods in
                  the cluster.
              secretBackend:
                description: |-
                  Secret backend configuration for the RabbitmqCluster.
                  Enables to fetch default user credentials and certificates from K8s external secret stores.
                properties:
                  externalSecret:
                    $ref: '#/definitions/k8s.io~1api~1core~1v1~0LocalObjectReference'
                  vault:
                    description: |-
                      VaultSpec will add Vault annotations (see https://www.vaultproject.io/docs/platform/k8s/injector/annotations)
                      to RabbitMQ Pods. It requires a Vault Agent Sidecar Injector (https://www.vaultproject.io/docs/platform/k8s/injector)
                      to be installed in the K8s cluster. The injector is a K8s Mutation Webhook Controller that alters RabbitMQ Pod specifications
                      (based on the added Vault annotations) to include Vault Agent containers that render Vault secrets to the volume.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Vault annotations that override the Vault annotations set by the cluster-operator.
                          For a list of valid Vault annotations, see https://www.vaultproject.io/docs/platform/k8s/injector/annotations
                        type: object
                      defaultUserPath:
                        description: |-
                          Path in Vault to access a KV (Key-Value) secret with the fields username and password for the default user.
                          For example "secret/data/rabbitmq/config".
                        type: string
                      defaultUserUpdaterImage:
                        description: |-
                          Sidecar container that updates the default user's password in RabbitMQ when it changes in Vault.
                          Additionally, it updates /var/lib/rabbitmq/.rabbitmqadmin.conf (used by rabbitmqadmin CLI).
                          Set to empty string to disable the sidecar container.
                        type: string
                      role:
                        description: |-
                          Role in Vault.
                          If vault.defaultUserPath is set, this role must have capability to read the pre-created default user credential in Vault.
                          If vault.tls is set, this role must have capability to create and update certificates in the Vault PKI engine for the domains
                          "<namespace>" and "<namespace>.svc".
                        type: string
                      tls:
                        properties:
                          altNames:
                            description: |-
                              Specifies the requested Subject Alternative Names (SANs), in a comma-delimited list.
                              These will be appended to the SANs added by the cluster-operator.
                              The cluster-operator will add SANs:
                              "<RabbitmqCluster name>-server-<index>.<RabbitmqCluster name>-nodes.<namespace>" for each pod,
                              e.g. "myrabbit-server-0.myrabbit-nodes.default".
                            type: string
                          commonName:
                            description: |-
                              Specifies the requested certificate Common Name (CN).
                              Defaults to <serviceName>.<namespace>.svc if not provided.
                            type: string
                          ipSans:
                            description: Specifies the requested IP Subject Alternative
                              Names, in a comma-delimited list.
                            type: string
                          pkiIssuerPath:
                            description: |-
                              Path in Vault PKI engine.
                              For example "pki/issue/hashicorp-com".
                              required
                            type: string
                          pkiRootPath:
                            description: Specifies an optional path to retrieve the
                              root CA from vault.  Useful if certificates are issued
                              by an intermediate CA
                            type: string
                        type: object
                    type: object
                type: object
              service:
                description: Settable attributes for the Service resource.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: Annotations to add to the Service.
                    type: object
                  ipFamilyPolicy:
                    $ref: '#/definitions/k8s.io~1api~1core~1v1~0IPFamilyPolicy'
                    description: |-
                      IPFamilyPolicy represents the dual-stack-ness requested or required by a Service
                      See also: https://pkg.go.dev/k8s.io/api/core/v1#IPFamilyPolicy
                    enum:
                    - SingleStack
                    - PreferDualStack
                    - RequireDualStack
                  type:
                    $ref: '#/definitions/k8s.io~1api~1core~1v1~0ServiceType'
                    default: ClusterIP
                    description: |-
                      Type of Service to create for the cluster. Must be one of: ClusterIP, LoadBalancer, NodePort.
                      For more info see https://pkg.go.dev/k8s.io/api/core/v1#ServiceType
                    enum:
                    - ClusterIP
                    - LoadBalancer
                    - NodePort
                type: object
              skipPostDeploySteps:
                description: |-
                  If unset, or set to false, the cluster will run `rabbitmq-queues rebalance all` whenever the cluster is updated.
                  Set to true to prevent the operator rebalancing queue leaders after a cluster update.
                  Has no effect if the cluster only consists of one node.
                  For more information, see https://www.rabbitmq.com/rabbitmq-queues.8.html#rebalance
                type: boolean
              terminationGracePeriodSeconds:
                default: 604800
                description: |-
                  TerminationGracePeriodSeconds is the timeout that each rabbitmqcluster pod will have to terminate gracefully.
                  It defaults to 604800 seconds ( a week long) to ensure that the container preStop lifecycle hook can finish running.
                  For more information, see: https://github.com/rabbitmq/cluster-operator/blob/main/docs/design/20200520-graceful-pod-termination.md
                format: int64
                minimum: 0
                type: integer
              tls:
                description: TLS-related configuration for the RabbitMQ cluster.
                properties:
                  caSecretName:
                    description: |-
                      Name of a Secret in the same Namespace as the RabbitmqCluster, containing the Certificate Authority's public certificate for TLS.
                      The Secret must store this as ca.crt.
                      This Secret can be created by running `kubectl create secret generic ca-secret --from-file=ca.crt=path/to/ca.cert`
                      Used for mTLS, and TLS for rabbitmq_web_stomp and rabbitmq_web_mqtt.
                    type: string
                  disableNonTLSListeners:
                    description: |-
                      When set to true, the RabbitmqCluster disables non-TLS listeners for RabbitMQ, management plugin and for any enabled plugins in the following list: stomp, mqtt, web_stomp, web_mqtt.
                      Only TLS-enabled clients will be able to connect.
                    type: boolean
                  secretName:
                    description: |-
                      Name of a Secret in the same Namespace as the RabbitmqCluster, containing the server's private key & public certificate for TLS.
                      The Secret must store these as tls.key and tls.crt, respectively.
                      This Secret can be created by running `kubectl create secret tls tls-secret --cert=path/to/tls.cert --key=path/to/tls.key`
                    type: string
                type: object
              tolerations:
                description: Tolerations is the list of Toleration resources attached
                  to each Pod in the RabbitmqCluster.
                items:
                  $ref: '#/definitions/k8s.io~1api~1core~1v1~0Toleration'
                type: array
              topologyRef:
                description: |-
                  TopologyRef to apply the Topology defined by the associated CR referenced
                  by name
                properties:
                  name:
                    description: Name - The Topology CR name that the Service references
                    type: string
                  namespace:
                    description: |-
                      Namespace - The Namespace to fetch the Topology CR referenced
                      NOTE: Namespace currently points by default to the same namespace where
                      the Service is deployed. Customizing the namespace is not supported and
                      webhooks prevent editing this field to a value different from the
                      current project
                    type: string
                type: object
            required:
            - containerImage
            type: object
          status:
            description: RabbitMqStatus defines the observed state of RabbitMq
            properties:
              conditions:
                description: Conditions
                items:
                  description: Condition defines an observation of a API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase.
                      type: string
                    severity:
                      description: |-
                        Severity provides a classification of Reason code, so the current situation is immediately
                        understandable and could act accordingly.
                        It is meant for situations where Status=False and it should be indicated if it is just
                        informational, warning (next reconciliation might fix it) or an error (e.g. DB create issue
                        and no actions to automatically resolve the issue can/should be done).
                        For conditions where Status=Unknown or Status=True the Severity should be SeverityNone.
                      type: string
                    status:
                      $ref: '#/definitions/k8s.io~1api~1core~1v1~0ConditionStatus'
                      description: Status of the condition, one of True, False, Unknown.
                    type:
                      description: Type of condition in CamelCase.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              lastAppliedTopology:
                description: LastAppliedTopology - the last applied Topology
                properties:
                  name:
                    description: Name - The Topology CR name that the Service references
                    type: string
                  namespace:
                    description: |-
                      Namespace - The Namespace to fetch the Topology CR referenced
                      NOTE: Namespace currently points by default to the same namespace where
                      the Service is deployed. Customizing the namespace is not supported and
                      webhooks prevent editing this field to a value different from the
                      current project
                    type: string
                type: object
              observedGeneration:
                description: |-
                  ObservedGeneration - the most recent generation observed for this
                  service. If the observed generation is less than the spec generation,
                  then the controller has not processed the latest changes injected by
                  the opentack-operator in the top-level CR (e.g. the ContainerImage)
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
